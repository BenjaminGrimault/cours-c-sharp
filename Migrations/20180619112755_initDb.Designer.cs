// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prolog.EntityFramework;

namespace Prolog.Migrations
{
    [DbContext(typeof(PrologDbContext))]
    [Migration("20180619112755_initDb")]
    partial class initDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Prolog.Model.Expression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("FactId");

                    b.HasKey("Id");

                    b.HasIndex("FactId");

                    b.ToTable("Expressions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Expression");
                });

            modelBuilder.Entity("Prolog.Model.Atom", b =>
                {
                    b.HasBaseType("Prolog.Model.Expression");


                    b.ToTable("Atom");

                    b.HasDiscriminator().HasValue("Atom");
                });

            modelBuilder.Entity("Prolog.Model.BinaryExpression", b =>
                {
                    b.HasBaseType("Prolog.Model.Expression");


                    b.ToTable("BinaryExpression");

                    b.HasDiscriminator().HasValue("BinaryExpression");
                });

            modelBuilder.Entity("Prolog.Model.Fact", b =>
                {
                    b.HasBaseType("Prolog.Model.Expression");


                    b.ToTable("Fact");

                    b.HasDiscriminator().HasValue("Fact");
                });

            modelBuilder.Entity("Prolog.Model.Rule", b =>
                {
                    b.HasBaseType("Prolog.Model.Expression");


                    b.ToTable("Rule");

                    b.HasDiscriminator().HasValue("Rule");
                });

            modelBuilder.Entity("Prolog.Model.Variable", b =>
                {
                    b.HasBaseType("Prolog.Model.Expression");


                    b.ToTable("Variable");

                    b.HasDiscriminator().HasValue("Variable");
                });

            modelBuilder.Entity("Prolog.Model.Expression", b =>
                {
                    b.HasOne("Prolog.Model.Fact")
                        .WithMany("Parameters")
                        .HasForeignKey("FactId");
                });
#pragma warning restore 612, 618
        }
    }
}
